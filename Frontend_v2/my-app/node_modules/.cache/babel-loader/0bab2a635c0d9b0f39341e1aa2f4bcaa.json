{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\FrontEnd\\\\capstone-frontend\\\\capstone-frontend\\\\my-app\\\\my-app\\\\src\\\\components\\\\tabledata\\\\MaterialTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Table = () => {\n  _s();\n\n  const [data, setData] = useState([{\n    id: '123',\n    materialname: 'Hieu',\n    materialimg: 'https://static.thenounproject.com/png/3262985-200.png',\n    amount: '100',\n    unit: '100'\n  }, {\n    id: '124',\n    materialname: 'Taco',\n    materialimg: 'https://static.thenounproject.com/png/3262985-200.png',\n    amount: '200',\n    unit: '200'\n  }, {\n    id: '125',\n    materialname: 'Bò',\n    materialimg: 'https://static.thenounproject.com/png/3262985-200.png',\n    amount: '400',\n    unit: '300'\n  }, {\n    id: '126',\n    materialname: 'Trung',\n    materialimg: 'https://static.thenounproject.com/png/3262985-200.png',\n    amount: '600',\n    unit: '400'\n  }]);\n  const columns = [{\n    title: 'ID',\n    field: 'id',\n    cellStyle: {\n      fontFamily: 'Muli'\n    }\n  }, {\n    title: 'Material Name',\n    field: 'materialname',\n    cellStyle: {\n      fontFamily: 'Muli'\n    }\n  }, {\n    title: 'Image',\n    field: 'materialimg',\n    render: rowData => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        height: '60px',\n        width: '60px'\n      },\n      src: rowData.materialimg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 70\n    }, this),\n    cellStyle: {\n      fontFamily: 'Muli'\n    }\n  }, {\n    title: 'Unit',\n    field: 'unit',\n    cellStyle: {\n      fontFamily: 'Muli'\n    }\n  }, {\n    title: 'Amount',\n    field: 'amount',\n    cellStyle: {\n      fontFamily: 'Muli'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"List of Materials\",\n      data: data,\n      columns: columns,\n      editable: {\n        onRowUpdate: (newRow, oldRow) => new Promise((resolve, reject) => {\n          const updatedData = [...data];\n          updatedData[updatedData.indexOf(oldRow)] = newRow;\n          setData(updatedData);\n          setTimeout(() => resolve(), 500);\n        }),\n        onRowDelete: selectedRow => new Promise((resolve, reject) => {\n          const updatedData = [...data];\n          updatedData.splice(updatedData.indexOf(selectedRow), 1);\n          setData(updatedData);\n          setTimeout(() => resolve(), 1000);\n        })\n      },\n      options: {\n        addRowPosition: 'first',\n        actionsColumnIndex: -1,\n        exportButton: false,\n        headerStyle: {\n          backgroundColor: '#E30217',\n          color: '#fff'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Table, \"uud6Toym0kS8pxOurEoYd0kfHGo=\");\n\n_c = Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/FrontEnd/capstone-frontend/capstone-frontend/my-app/my-app/src/components/tabledata/MaterialTable.js"],"names":["React","useState","MaterialTable","Table","data","setData","id","materialname","materialimg","amount","unit","columns","title","field","cellStyle","fontFamily","render","rowData","height","width","onRowUpdate","newRow","oldRow","Promise","resolve","reject","updatedData","indexOf","setTimeout","onRowDelete","selectedRow","splice","addRowPosition","actionsColumnIndex","exportButton","headerStyle","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\n\r\nexport const Table = () => {\r\n    const [data, setData] = useState([\r\n        { id: '123', materialname: 'Hieu', materialimg: 'https://static.thenounproject.com/png/3262985-200.png', amount: '100', unit: '100' },\r\n        { id: '124', materialname: 'Taco', materialimg: 'https://static.thenounproject.com/png/3262985-200.png', amount: '200', unit: '200' },\r\n        { id: '125', materialname: 'Bò', materialimg: 'https://static.thenounproject.com/png/3262985-200.png', amount: '400', unit: '300' },\r\n        { id: '126', materialname: 'Trung', materialimg: 'https://static.thenounproject.com/png/3262985-200.png', amount: '600', unit: '400' },\r\n    ])\r\n    const columns = [\r\n        {\r\n            title: 'ID', field: 'id', cellStyle: { fontFamily: 'Muli' }\r\n        },\r\n        {\r\n            title: 'Material Name', field: 'materialname', cellStyle: { fontFamily: 'Muli' }\r\n        },\r\n        {\r\n            title: 'Image', field: 'materialimg', render: rowData => <img style={{ height: '60px', width: '60px' }} src={rowData.materialimg} />, cellStyle: { fontFamily: 'Muli' }\r\n        },\r\n        {\r\n            title: 'Unit', field: 'unit', cellStyle: { fontFamily: 'Muli' }\r\n        },\r\n        {\r\n            title: 'Amount', field: 'amount', cellStyle: { fontFamily: 'Muli' }\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n            <MaterialTable title={\"List of Materials\"}\r\n                data={data}\r\n                columns={columns}\r\n                editable={{\r\n                    onRowUpdate: (newRow, oldRow) => new Promise((resolve, reject) => {\r\n                        const updatedData = [...data]\r\n                        updatedData[updatedData.indexOf(oldRow)] = newRow\r\n                        setData(updatedData)\r\n                        setTimeout(() => resolve(), 500)\r\n                    }),\r\n                    onRowDelete: (selectedRow) => new Promise((resolve, reject) => {\r\n                        const updatedData = [...data]\r\n                        updatedData.splice(updatedData.indexOf(selectedRow), 1)\r\n                        setData(updatedData)\r\n                        setTimeout(() => resolve(), 1000)\r\n                    }\r\n                    )\r\n                }\r\n                }\r\n                options={{\r\n                    addRowPosition: 'first',\r\n                    actionsColumnIndex: -1,\r\n                    exportButton: false,\r\n                    headerStyle: { backgroundColor: '#E30217', color: '#fff', }\r\n                }} />\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}